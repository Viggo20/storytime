// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level3":
            case "level3":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level1":
            case "level1":return tiles.createTilemap(hex`0a000900020302020202020202020201010101010101010202010202020202020102020101020101010101020201020202020202010202010102010101010102020102020102020202020201010501010101010202020202020402020202`, img`
2 . 2 2 2 2 2 2 2 2 
2 . . . . . . . . 2 
2 . 2 2 2 2 2 2 . 2 
2 . . 2 . . . . . 2 
2 . 2 2 2 2 2 2 . 2 
2 . . 2 . . . . . 2 
2 . 2 2 2 2 2 2 2 2 
2 . . . . . . . . 2 
2 2 2 2 2 . 2 2 2 2 
`, [myTiles.transparency16,sprites.dungeon.darkGroundCenter,sprites.dungeon.floorLight0,sprites.dungeon.doorOpenNorth,sprites.dungeon.doorOpenSouth,sprites.dungeon.floorLight1], TileScale.Sixteen);
            case "level2":
            case "level2":return tiles.createTilemap(hex`1400140002020202060306020202020202020202020202020201010102010202010101010101010101010102020102040a010a02010202080202020802020202020102020a010a02010101010101010101010102020101010101010101020802020802020202010a020202020201080808020201010101010101010a020202020201080508020201020202020202010a020202020801020102020201020202020209010a020202020201020102020201020202020209010202080808080102010202010102020202020901020801010101010201020202020808080202020102020808080808080101010101010101010101010202010101010101010202020202020102090902020201080202090909020201010102010202020202020102010202010202020102020201020202020202010201020201020202010202020102020202020201020102020102020201020202010202020202020101010101010101020101010101010101010202020808080808020102020202020202020202020202020202020206070602020202020202020202`, img`
22222.22222222222222
2...2.22...........2
2.2.2.22.22222222222
2.222.22...........2
2........222222222.2
22222.22222........2
22222.2.222.222222.2
22222.2.222.222222.2
22222.2.222.222222.2
22222.2.22..222222.2
2.....2.2222222222.2
2222222............2
2.......222222.22222
2.22222222...2.22222
2.2.22.222.222.22222
2.2.22.222.222.22222
2.2.22.222.222.22222
2........2.........2
22222222.22222222222
22222222.22222222222
`, [myTiles.transparency16,sprites.dungeon.darkGroundCenter,sprites.dungeon.floorLight0,sprites.dungeon.doorOpenNorth,sprites.dungeon.collectibleBlueCrystal,sprites.dungeon.chestClosed,sprites.dungeon.doorLockedSouth,sprites.dungeon.stairLarge,sprites.dungeon.floorLightMoss,sprites.dungeon.floorLight4,sprites.dungeon.floorLight1], TileScale.Sixteen);
            case "level4":
            case "level4":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
